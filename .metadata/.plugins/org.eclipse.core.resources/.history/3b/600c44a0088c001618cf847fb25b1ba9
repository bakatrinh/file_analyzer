package file_analyzer;

import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;

import javax.swing.JFileChooser;

public class FileAnalyzerController {

	private File _file;
	private FileAnalyzerView _view;
	private String _outputString = "";

	public FileAnalyzerController(FileAnalyzerView view) {
		_view = view;
		_view.setController(this);
	}

	public File getFile() {
		return _file;
	}

	public void openFile(JFileChooser fileChooser) throws IOException {
		int returnVal = fileChooser.showOpenDialog(_view);

		if (returnVal == JFileChooser.APPROVE_OPTION) {
			_file = fileChooser.getSelectedFile();

			_view.getFileLabel().setText(_file.getName());

			try {
				StringBuilder sb = new StringBuilder();
				DataInputStream input = new DataInputStream(new FileInputStream(_file));
				try {
					while( true ) {
						sb.append(Integer.toBinaryString(input.readByte()));
					}
				} catch( EOFException eof ) {
				} catch( IOException e ) {
					e.printStackTrace();
				}
				input.close();
				_outputString = sb.toString();
			} catch( FileNotFoundException e2 ) {
				e2.printStackTrace();
			}
			

			_view.getTextArea().setText(binaryToAscii(_outputString));
		}

	}

	public String getBits(byte b) {
		String result = "";
		for(int i = 0; i < 8; i++)
			result += (b & (1 << i)) == 0 ? "0" : "1";
		return result;
	}

	public String binaryToAscii(String s) {
		return "";
	}

	public void saveFile(JFileChooser fileChooser) throws FileNotFoundException {
		int returnVal = fileChooser.showSaveDialog(_view);
		if (returnVal == JFileChooser.APPROVE_OPTION) {
			_file = fileChooser.getSelectedFile();
			String filePath = _file.getAbsolutePath();
			if (!filePath.endsWith(".txt")) {
				_file = new File(filePath + ".txt");
			}
			try (PrintStream out = new PrintStream(new FileOutputStream(_file))) {
				out.print(_outputString);
			}
		}
	}

	public void copyClipboard() {
		StringSelection strSelec = new StringSelection(_outputString);
		Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
		clpbrd.setContents(strSelec, null);
	}
}
